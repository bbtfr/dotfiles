#!/usr/bin/env python3

import os
import subprocess
import sys
import time

import click


@click.group
def cli():
    pass


def run_command(commands, check=True, **kwargs):
    proc = subprocess.run(commands, **kwargs)
    if check and proc.returncode:
        sys.exit(proc.returncode)
    return proc


@cli.command
@click.argument("name")
def show(name):
    commands = [
        "security",
        "find-generic-password",
        "-a",
        os.getlogin(),
        "-s",
        name,
        "-w",
    ]
    run_command(commands)


@cli.command
@click.argument("name")
@click.option("-p", "--password", prompt=True, hide_input=True)
def insert(name, password):
    commands = [
        "security",
        "add-generic-password",
        "-T",
        "",
        "-a",
        os.getlogin(),
        "-s",
        name,
        "-w",
        password,
    ]
    run_command(commands)


@cli.command
def list():
    commands = [
        "security",
        "dump-keychain",
    ]
    proc = run_command(commands, capture_output=True)
    keychains = []
    for line in proc.stdout.decode().splitlines():
        if not line.startswith(" "):
            if line.startswith("keychain:"):
                keychains.append({})
            if line.startswith("attributes:"):
                keychains[-1]["attributes"] = {}
                continue
            parts = line.split(": ")
            keychains[-1][parts[0]] = parts[1]
        else:
            line = line.lstrip()
            parts = line.split("=")
            keychains[-1]["attributes"][parts[0]] = parts[1]

    def _parse_blob(content):
        return content[1:-1]

    def _parse_timedate(content):
        content = content.split("  ")[-1][1:-6]
        timedate = time.strptime(content, "%Y%m%d%H%M%S")
        return time.strftime("%Y-%m-%dT%H:%M:%S", timedate)

    login = os.getlogin()
    for keychain in keychains:
        account = keychain.get("attributes", {}).get('"acct"<blob>', "")
        if _parse_blob(account) != login:
            continue
        print(
            "%s\t%s"
            % (
                _parse_blob(keychain["attributes"]['"svce"<blob>']),
                _parse_timedate(keychain["attributes"]['"mdat"<timedate>']),
            )
        )


if __name__ == "__main__":
    cli()
